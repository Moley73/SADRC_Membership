"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin",{

/***/ "./lib/pdfExportHelper.js":
/*!********************************!*\
  !*** ./lib/pdfExportHelper.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportMembersToPDF: function() { return /* binding */ exportMembersToPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jspdf-autotable */ \"./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.mjs\");\n// PDF Export Helper\n\n\n/**\n * Exports the given members array to a styled PDF file.\n * @param {Array} members - Array of member objects to export.\n * @param {String} exportType - Type of export ('full', 'competitions', 'aaga', or 'summary')\n */ function exportMembersToPDF(members) {\n    let exportType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"summary\";\n    // Create new document with landscape orientation for better table display\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: \"a4\"\n    });\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    const margin = 16;\n    const currentDate = new Date().toLocaleDateString(\"en-GB\"); // Format as DD/MM/YYYY\n    // Add club logo/branding\n    addBranding(doc, pageWidth, margin);\n    // Set document properties\n    doc.setProperties({\n        title: \"SADRC Membership Export\",\n        subject: \"Membership Data\",\n        author: \"SADRC Admin System\",\n        creator: \"SADRC Membership App\"\n    });\n    // Add title and subtitle\n    let title = \"\";\n    let startY = margin + 30; // Adjusted for logo\n    // Configure columns and data based on export type\n    switch(exportType){\n        case \"active\":\n            title = \"Active Members\";\n            break;\n        case \"pending\":\n            title = \"Pending Members\";\n            break;\n        case \"expired\":\n            title = \"Expired Members\";\n            break;\n        case \"competitions\":\n            title = \"Club Competitions Participants\";\n            break;\n        case \"aaga\":\n            title = \"AaGA Challenge Participants\";\n            break;\n        case \"summary\":\n        default:\n            title = \"Membership Summary\";\n            break;\n    }\n    // Section title\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(18);\n    doc.setTextColor(0, 0, 0);\n    doc.text(title, pageWidth / 2, startY, {\n        align: \"center\"\n    });\n    // Stats summary\n    startY += 10;\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(10);\n    const approvedCount = members.filter((m)=>m.status === \"approved\").length;\n    const pendingCount = members.filter((m)=>!m.status || m.status === \"pending\").length;\n    const paidCount = members.filter((m)=>m.payment_status === \"paid\").length;\n    const competitionsCount = members.filter((m)=>m.opt_in_competitions).length;\n    const aagaCount = members.filter((m)=>m.opt_in_aaga_challenge).length;\n    const activeCount = members.filter((m)=>m.membership_status === \"active\").length;\n    // Create a stats box\n    const statsBoxY = startY;\n    const statsBoxHeight = 20;\n    // Draw stats box background\n    doc.setFillColor(245, 245, 245);\n    doc.roundedRect(margin, statsBoxY, pageWidth - margin * 2, statsBoxHeight, 3, 3, \"F\");\n    // Add stats text\n    doc.setTextColor(80, 80, 80);\n    doc.text(\"Total Members: \".concat(members.length, \" | Approved: \").concat(approvedCount, \" | Pending: \").concat(pendingCount, \" | Paid: \").concat(paidCount), margin + 5, statsBoxY + 8);\n    doc.text(\"Active: \".concat(activeCount, \" | Competition Participants: \").concat(competitionsCount, \" | AaGA Challenge Participants: \").concat(aagaCount), margin + 5, statsBoxY + 16);\n    startY += statsBoxHeight + 10;\n    // Determine columns based on export type\n    let columns = [];\n    let rows = [];\n    // Configure columns and data based on export type\n    switch(exportType){\n        case \"active\":\n        case \"pending\":\n        case \"expired\":\n            columns = [\n                {\n                    header: \"First Name\",\n                    dataKey: \"first_name\"\n                },\n                {\n                    header: \"Surname\",\n                    dataKey: \"surname\"\n                },\n                {\n                    header: \"Email\",\n                    dataKey: \"email\"\n                },\n                {\n                    header: \"Date of Birth\",\n                    dataKey: \"date_of_birth\"\n                },\n                {\n                    header: \"Status\",\n                    dataKey: \"status\"\n                },\n                {\n                    header: \"Payment\",\n                    dataKey: \"payment_status\"\n                },\n                {\n                    header: \"EA Number\",\n                    dataKey: \"ea_number\"\n                },\n                {\n                    header: \"Expiry Date\",\n                    dataKey: \"membership_expiry\"\n                }\n            ];\n            rows = members.map((m)=>({\n                    first_name: m.first_name || \"\",\n                    surname: m.surname || \"\",\n                    email: m.email || \"\",\n                    date_of_birth: formatDate(m.date_of_birth),\n                    status: formatStatus(m.status || \"pending\"),\n                    payment_status: m.payment_status === \"paid\" ? \"Paid\" : \"Unpaid\",\n                    ea_number: m.ea_number || \"Not registered\",\n                    membership_expiry: formatDate(m.membership_expiry)\n                }));\n            break;\n        case \"competitions\":\n            const competitionMembers = members.filter((m)=>m.opt_in_competitions);\n            columns = [\n                {\n                    header: \"First Name\",\n                    dataKey: \"first_name\"\n                },\n                {\n                    header: \"Surname\",\n                    dataKey: \"surname\"\n                },\n                {\n                    header: \"Email\",\n                    dataKey: \"email\"\n                },\n                {\n                    header: \"Date of Birth\",\n                    dataKey: \"date_of_birth\"\n                },\n                {\n                    header: \"Membership Status\",\n                    dataKey: \"membership_status\"\n                },\n                {\n                    header: \"Payment Status\",\n                    dataKey: \"payment_status\"\n                },\n                {\n                    header: \"EA Number\",\n                    dataKey: \"ea_number\"\n                }\n            ];\n            rows = competitionMembers.map((m)=>({\n                    first_name: m.first_name || \"\",\n                    surname: m.surname || \"\",\n                    email: m.email || \"\",\n                    date_of_birth: formatDate(m.date_of_birth),\n                    membership_status: formatStatus(m.membership_status || \"pending\"),\n                    payment_status: m.payment_status === \"paid\" ? \"Paid\" : \"Unpaid\",\n                    ea_number: m.ea_number || \"Not registered\"\n                }));\n            break;\n        case \"aaga\":\n            const aagaMembers = members.filter((m)=>m.opt_in_aaga_challenge);\n            columns = [\n                {\n                    header: \"First Name\",\n                    dataKey: \"first_name\"\n                },\n                {\n                    header: \"Surname\",\n                    dataKey: \"surname\"\n                },\n                {\n                    header: \"Email\",\n                    dataKey: \"email\"\n                },\n                {\n                    header: \"Date of Birth\",\n                    dataKey: \"date_of_birth\"\n                },\n                {\n                    header: \"Membership Status\",\n                    dataKey: \"membership_status\"\n                },\n                {\n                    header: \"Payment Status\",\n                    dataKey: \"payment_status\"\n                }\n            ];\n            rows = aagaMembers.map((m)=>({\n                    first_name: m.first_name || \"\",\n                    surname: m.surname || \"\",\n                    email: m.email || \"\",\n                    date_of_birth: formatDate(m.date_of_birth),\n                    membership_status: formatStatus(m.membership_status || \"pending\"),\n                    payment_status: m.payment_status === \"paid\" ? \"Paid\" : \"Unpaid\"\n                }));\n            break;\n        case \"summary\":\n        default:\n            columns = [\n                {\n                    header: \"First Name\",\n                    dataKey: \"first_name\"\n                },\n                {\n                    header: \"Surname\",\n                    dataKey: \"surname\"\n                },\n                {\n                    header: \"Email\",\n                    dataKey: \"email\"\n                },\n                {\n                    header: \"Status\",\n                    dataKey: \"status\"\n                },\n                {\n                    header: \"Payment\",\n                    dataKey: \"payment_status\"\n                }\n            ];\n            rows = members.map((m)=>({\n                    first_name: m.first_name || \"\",\n                    surname: m.surname || \"\",\n                    email: m.email || \"\",\n                    status: formatStatus(m.status || \"pending\"),\n                    payment_status: m.payment_status === \"paid\" ? \"Paid\" : \"Unpaid\"\n                }));\n            break;\n    }\n    // Table\n    (0,jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(doc, {\n        head: [\n            columns.map((col)=>col.header)\n        ],\n        body: rows.map((row)=>columns.map((col)=>row[col.dataKey])),\n        startY: startY,\n        margin: {\n            left: margin,\n            right: margin\n        },\n        styles: {\n            fontSize: 10,\n            cellPadding: 4,\n            valign: \"middle\",\n            overflow: \"linebreak\",\n            textColor: [\n                30,\n                30,\n                30\n            ],\n            halign: \"left\",\n            minCellHeight: 10,\n            lineWidth: 0.1\n        },\n        headStyles: {\n            fillColor: [\n                255,\n                102,\n                0\n            ],\n            textColor: [\n                255,\n                255,\n                255\n            ],\n            fontStyle: \"bold\",\n            fontSize: 11,\n            halign: \"left\",\n            cellPadding: 5\n        },\n        alternateRowStyles: {\n            fillColor: [\n                245,\n                245,\n                245\n            ]\n        },\n        columnStyles: getColumnStyles(columns),\n        didDrawPage: (data)=>{\n            // Add header to each page\n            if (data.pageNumber > 1) {\n                addBranding(doc, pageWidth, margin);\n            }\n            // Add footer to each page\n            addFooter(doc, pageWidth, pageHeight, data.pageNumber, doc.getNumberOfPages());\n        }\n    });\n    // Save the PDF\n    const filename = \"sadrc_members_\".concat(exportType, \"_\").concat(new Date().toISOString().split(\"T\")[0], \".pdf\");\n    doc.save(filename);\n    return filename;\n}\n/**\n * Adds branding elements to the PDF\n */ function addBranding(doc, pageWidth, margin) {\n    // Header background\n    doc.setFillColor(255, 102, 0);\n    doc.rect(0, 0, pageWidth, margin + 10, \"F\");\n    // Title\n    doc.setFontSize(24);\n    doc.setTextColor(255, 255, 255);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"SADRC Membership\", pageWidth / 2, margin, {\n        align: \"center\"\n    });\n    // Date line\n    doc.setDrawColor(255, 255, 255);\n    doc.setLineWidth(0.5);\n    doc.line(margin, margin + 4, pageWidth - margin, margin + 4);\n    // Export date\n    doc.setFontSize(11);\n    doc.setTextColor(255, 255, 255);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(\"Export Date: \".concat(new Date().toLocaleDateString(\"en-GB\")), pageWidth / 2, margin + 10, {\n        align: \"center\"\n    });\n}\n/**\n * Adds a footer to each page\n */ function addFooter(doc, pageWidth, pageHeight, pageNumber, totalPages) {\n    const margin = 16; // Define margin here since it's used in this function\n    // Footer line\n    doc.setDrawColor(200, 200, 200);\n    doc.setLineWidth(0.5);\n    doc.line(margin, pageHeight - 15, pageWidth - margin, pageHeight - 15);\n    // Page numbers and confidentiality notice\n    doc.setFontSize(8);\n    doc.setTextColor(120, 120, 120);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(\"Skegness & District Running Club - Confidential - Page \".concat(pageNumber, \" of \").concat(totalPages), pageWidth / 2, pageHeight - 8, {\n        align: \"center\"\n    });\n}\n/**\n * Returns appropriate column styles based on the columns array\n */ function getColumnStyles(columns) {\n    const styles = {};\n    // Set width for each column type\n    columns.forEach((col, index)=>{\n        switch(col.dataKey){\n            case \"first_name\":\n            case \"surname\":\n                styles[index] = {\n                    cellWidth: 25\n                };\n                break;\n            case \"email\":\n                styles[index] = {\n                    cellWidth: 50\n                };\n                break;\n            case \"date_of_birth\":\n            case \"membership_expiry\":\n                styles[index] = {\n                    cellWidth: 25,\n                    halign: \"center\"\n                };\n                break;\n            case \"status\":\n            case \"membership_status\":\n            case \"payment_status\":\n                styles[index] = {\n                    cellWidth: 25,\n                    halign: \"center\"\n                };\n                break;\n            case \"ea_number\":\n                styles[index] = {\n                    cellWidth: 30,\n                    halign: \"center\"\n                };\n                break;\n            default:\n                styles[index] = {\n                    cellWidth: \"auto\"\n                };\n        }\n    });\n    return styles;\n}\n/**\n * Formats a date string to DD/MM/YYYY\n */ function formatDate(dateString) {\n    if (!dateString) return \"Not set\";\n    try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return \"Invalid date\";\n        return date.toLocaleDateString(\"en-GB\");\n    } catch (e) {\n        return dateString;\n    }\n}\n/**\n * Formats status with proper capitalization\n */ function formatStatus(status) {\n    if (!status) return \"Pending\";\n    return status.charAt(0).toUpperCase() + status.slice(1);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/pdfExportHelper.js\n"));

/***/ })

});